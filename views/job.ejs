<!DOCTYPE html>

<% if(message != '') { %>
<div class="container-fluid flash-msg">
  <div class="container">
    <div class="col-xs-12 no-gutter">
      <h5><%= message %></h5>
    </div>
  </div>
</div>
<% } %>

<% if(user.Jobs) { %>
<div class="container content-top">
  <h2>Jobs</h2>

<div class="table-responsive">
<table class="table">
<%

var dateObj = _.pluck(user.Jobs, 'date');
var dateMap = _.map(dateObj, function(d) { return d.toDateString() });
var uniqDate = _.uniq(dateMap);
console.log(uniqDate);

uniqDate.forEach(function(date) {

// ================ //
// GET JOBS BY DATE //
// ================ //

var jobs = _.filter(user.Jobs, function(obj) { return obj.date.toDateString() == date });
console.log("NUMBER OF JOBS PER DATE ==> " + jobs.length);

// ================== //
// STAFF POOL BY DATE //
// ================== //

var allStaff = user.Staffs;
var allStaffIds = _.pluck(allStaff, 'id');

console.log('ALL ==> ' + allStaffIds);

var askedStaff = [];

jobs.forEach(function(job) {
   job.Bookings.forEach(function(booking) {
      if(booking.Asks.length > 0) {
         booking.Asks.forEach(function(ask) {
            askedStaff.push(ask.Staff.id);
         });
      }
   });
});

console.log('EXCLUDE ==> ' + askedStaff);

var availableStaff = _.difference(allStaffIds, askedStaff);
console.log('AVAILABLE ==> ' + availableStaff);

%><tr><td><h3><%= humanize.date('l jS F Y', jobs[0].date) %></h3></tr></td><%

   jobs.forEach(function(job) {
      // console.log(job.Client.name);
%>

<tr><td>

  <table class="table">
    <thead>
      <th class="col-xs-2">Client</th>
      <th class="col-xs-1">Arrival</th>
      <th class="col-xs-5">Location</th>
      <th class="col-xs-1">Pax</th>
      <th class="col-xs-2">Event</th>
      <th class="col-xs-1"></th>
    </thead>
    <tbody>
         <tr>
	   <form class="form-horizontal" method="post" action="api/jobs/<%= job.id %>" role="form">
             <td><input class="form-control" value="<%= job.Client.name %>" name="client" /></td>
	     <td><input class="form-control" value="<%= humanize.date('Hi', job.date) %>" name="time" /></td>
             <td><input class="form-control" value="<%= job.Location.name %>" name="location" /></td>
             <td><input class="form-control" value="<%= job.pax %>" name="pax" /></td>
             <td><input class="form-control" value="<%= job.EventType.name %>" name="eventType" /></td>

	     <td class="text-right">
               <a href="/api/job/remove/<%= job.id %>?redirect=job" class="btn btn-danger">
		 <span class="fui-cross"></span>
               </a>
             </td>
	   </form> <!-- JOBS -->
         </tr>
    </tbody>
  </table>

<% if(job.Bookings.length > 0) { %>
<div class="no-gutter col-xs-10 col-xs-offset-2">

  <form id="job<%= job.id %>" class="form-inline" method="post" action="api/ask" role="form">

  <table class="table table-striped">
    <thead>
      <th class="col-xs-1">Start</th>
      <th class="col-xs-1">No.</th>
      <th class="col-xs-3">Position</th>
      <th></th>
      <th></th>
      <th></th>
    </thead>
    <tbody>

<%
  // ========== //
  // UNIQ START //
  // ========== //

  var start = _.pluck(job.Bookings, 'start');
  var uniqStart = _.uniq(start);

  for(var j=0; j < uniqStart.length; j++) {

      // ============= //
      // UNIQ POSITION //
      // ============= //

      var posObj = _.where(job.Bookings, { start: uniqStart[j] });
      var pos = _.pluck(posObj, 'position');
      var uniqPos = _.uniq(pos);

      for(var k=0; k < uniqPos.length; k++) {


          // ======== //
          // BOOKINGS //
          // ======== //

          %><tr><%
          var bookings = _.where(job.Bookings, { start: uniqStart[j], position: uniqPos[k] });

// get total staff pool

	  console.log('==> CLIENT: ' + job.Client.name); // print client

	  var posArr = [];
	  var el = uniqPos[k];

	  console.log('==> ' + el.toUpperCase()); // print position

// get all of a given position and push to a pos array

          var mappedAvailableStaff = _.map(availableStaff, function(id) { return _.find(user.Staffs, function(staff) { return staff.id == id }) });

          mappedAvailableStaff.forEach(function(staff) {
             var hasPos = _.pluck(staff.Positions, 'name').indexOf(el);
             if(hasPos >= 0) { 
                posArr.push(staff); // array of staff objects
             };
          });

// sort that pos array

          var sortArr = posArr.sort(function(a, b) {
             return 1 // values 0 or >0 or <0 where >0 sorts b before a and <0 sorts a before b
          });

          sortArr.forEach(function(ea) {
             console.log(ea.firstName + ' ' + ea.lastName);
          });

// slice each allocation from the total date/job pool

	  %><td><% if(k==0) { %><%= uniqStart[j] %><% } %></td><%
	  %><td><%= bookings.length %></td><%
	  %><td><%= uniqPos[k] %></td><%

          var mult = Math.floor(bookings.length/3);
          var mod = bookings.length % 3;
      
          if(mod!=0) { var diff = 3-mod; } else { var diff = 0; }
	  console.log(mult + ' ' + mod + ' ' + diff);

          for(var l=0; l < bookings.length; l++) { 

// exclude some staff by cutting

	     var unusedArr = _.difference(sortArr, askedStaff);
	     var suggestion = _.findWhere(unusedArr, function(staff) { return staff });

	  %>

             <td>				   
	        <div class="form-group no-margin <% if(_.find(bookings[l].Asks, function(ask){ return ask.accepted == true })) { %>has-success<% } else if(bookings[l].Asks.length>0 && _.find(bookings[l].Asks, function(ask) { return ask.accepted == true || ask.accepted == null }) ) { %>has-warning<% } else { %>has-error<% } %>">
	           <label class="sr-only" for="<%= bookings[l].id %>"><%= bookings[l].id %></label>
	           <input type="text" class="form-control input-sm" placeholder="Name" 
<% if(bookings[l].Asks.length>0 && _.find(bookings[l].Asks, function(ask){ return ask.accepted  == null || ask.accepted == true }) ) { %>
		          value="<%= _.find(bookings[l].Asks, function(ask){ return ask.accepted  == null || ask.accepted == true }).Staff.firstName %>"
		          disabled
<% } else { %>
                          value="<% if(suggestion) { %><%= suggestion.firstName %><% } %>"
<% } %>
			  name="<%= bookings[l].id %>" />
	        </div>
	     </td>
	  <% 

// push suggestion to askedStaff
if(suggestion) { askedStaff.push( _.find(user.Staffs, function(staff){ return staff.firstName == suggestion.firstName }).id ) }

	  }

          for(var m=0; m<diff; m++) { %><td></td><% }

          %></tr><%
      }

  }
%>

    </tbody>
  </table>

  </form> <!-- ASK -->

</div>
<% } // if booking exists %>


  <form class="form-inline" method="post" action="api/booking/<%= job.id %>" role="form">
    <div class="no-gutter col-xs-10 col-xs-offset-2">
      <table class="table">
	<thead>
	  <th>Start</th>
	  <th>Position</th>
	  <th>No.</th>
	  <th class="col-xs-1"></th>
	</thead>
	<tbody>
	  <tr>
	    <td><div class="form-group"><input type="text" class="form-control" placeholder="24 hour time" name="start"></div></td>
	    <td><div class="form-group"><input type="text" class="form-control" placeholder="Position" name="position"></div></td>
	    <td><div class="form-group"><input type="text" class="form-control" placeholder="No." name="number"></div></td>
	    <input type="hidden" value="<%= job.id %>" name="jobId">
	    <td class="text-right">
	      <button type="submit" class="btn btn btn-primary">
		<span class="fui-plus"></span>
	      </button>
	    </td>
	  </tr>
	</tbody>
      </table>
    </div>
  </form> <!-- BOOKING -->

  <div class="col-sm-8 col-sm-offset-2">
    <button type="submit" class="btn btn-primary btn-block lg-mb" form="job<%= job.id %>">Roster</button>
  </div>

</td></tr>
<% }); // for each job %>

<% }); // for each date %>

</table>
</div>
</div>
<% } // if jobs exist %>



<!-- NEW JOB -->

<div class="container">
  <div class="row">
    <div class="col-xs-12">

      <form class="form-horizontal" method="post" action="/api/job/" role="form">
        <div class="login-form">

          <h5>New job</h5>

          <div class="form-group sm-mb">

	    <label class="col-sm-1" for="day">Date</label>
	    <div class="col-sm-5 no-gutter">
              <div class="col-xs-4"><input type="integer" class="form-control" placeholder="dd" name="day"></div>
              <div class="col-xs-4"><input type="integer" class="form-control" placeholder="mm" name="month"></div>
              <div class="col-xs-4"><input type="integer" class="form-control" placeholder="year" value="<%= humanize.date('Y', new Date()) %>" name="year"></div>
	    </div>

	    <label class="col-sm-1" for="time">Arrival</label>
	    <div class="col-sm-5">
	      <input type="text" class="form-control" placeholder="24-hour time" name="time" />
	    </div>

          </div>


          <div class="form-group sm-mb">

	    <label class="col-sm-1" for="client">Client</label>
            <div class="col-sm-5">
              <input type="text" class="form-control" placeholder="Client" name="client" />
            </div>

	    <label class="col-sm-1" for="location">Location</label>
            <div class="col-sm-5">
              <input type="text" class="form-control" placeholder="Location" name="location">
            </div>

          </div>

          <div class="form-group sm-mb">

	    <label class="col-sm-1" for="pax">Pax</label>
            <div class="col-sm-5">
              <input type="integer" class="form-control" placeholder="Pax" name="pax">
            </div>

	    <label class="col-sm-1" for="eventType">Event</label>
            <div class="col-sm-5">
              <input type="text" class="form-control" placeholder="Event Type" name="eventType">
            </div>
          </div>

	  <input type="hidden" value="job" name="redirect">

          <div class="row">
            <div class="col-sm-6 col-sm-offset-3">
              <button type="submit" class="btn btn-primary btn-lg btn-block">Create job</button>
            </div>
          </div>

        </div>
      </form>

    </div>
  </div>
</div>


<script>
var clientBlood = new Bloodhound({
  datumTokenizer: Bloodhound.tokenizers.obj.whitespace('name'),
  queryTokenizer: Bloodhound.tokenizers.whitespace,
  local: [
    <% for(var m=0; m<user.Clients.length; m++) { %>
      { name: '<%= user.Clients[m].name %>' },
    <% } %>
  ],
});
 
var locationBlood = new Bloodhound({
  datumTokenizer: Bloodhound.tokenizers.obj.whitespace('name'),
  queryTokenizer: Bloodhound.tokenizers.whitespace,
  local: [
    <% for(var m=0; m<user.Locations.length; m++) { %>
      { name: '<%= user.Locations[m].name %>' },
    <% } %>
  ],
});

var eventBlood = new Bloodhound({
  datumTokenizer: Bloodhound.tokenizers.obj.whitespace('name'),
  queryTokenizer: Bloodhound.tokenizers.whitespace,
  local: [
    <% for(var m=0; m<user.EventTypes.length; m++) { %>
      { name: '<%= user.EventTypes[m].name %>' },
    <% } %>
  ],
});

var posBlood = new Bloodhound({
  datumTokenizer: Bloodhound.tokenizers.obj.whitespace('name'),
  queryTokenizer: Bloodhound.tokenizers.whitespace,
  local: [
    <% for(var m=0; m<user.Positions.length; m++) { %>
      { name: '<%= user.Positions[m].name %>' },
    <% } %>
  ],
});
 
clientBlood.initialize();
locationBlood.initialize();
eventBlood.initialize();
posBlood.initialize();

$('[name="client"]').typeahead({
  highlight: true
},
{
  name: 'client',
  displayKey: 'name',
  source: clientBlood.ttAdapter(),
});

$('[name="location"]').typeahead({
  highlight: true
},
{
  name: 'location',
  displayKey: 'name',
  source: locationBlood.ttAdapter(),
});

$('[name="eventType"]').typeahead({
  highlight: true
},
{
  name: 'eventType',
  displayKey: 'name',
  source: eventBlood.ttAdapter(),
});

$('[name="position"]').typeahead({
  highlight: true
},
{
  name: 'position',
  displayKey: 'name',
  source: posBlood.ttAdapter(),
});
</script>
